{% extends 'base.html.twig' %}

{% block title %}Hello HomeController!
{% endblock %}

{% block body %}
	<style>
		.example-wrapper {
			margin: 1em auto;
			max-width: 800px;
			width: 95%;
			font: 18px / 1.5 sans-serif;
		}
		.example-wrapper code {
			background: #F5F5F5;
			padding: 2px 6px;
		}
	</style>
	{% include 'shared/_menu.twig' %}
	{% include 'shared/_menu1.twig' ignore missing %}
	<div class="example-wrapper">
		<h1>Hello
			{{ controller_name }}! ✅</h1>
		<ul>
			<li>
				{{ tableau[0] }}
			</li>
			<li>
				{{ tableau['1'] }}
			</li>
			<li>
				{{ tableau["2"] }}
			</li>
		</ul>


		<ul>
			<li>
				{{ personne.id }}
			</li>
			<li>
				{{ personne.getNom() | upper }}
			</li>
			<li>
				{{ personne.prenom() }}
			</li>
			{# concaténation#}
			<li>
				{{ (personne.prenom ~ " " ~ personne.nom ) | title}}
			</li>
			{{ dump(personne) }}
			<li>
				{{ " dalton  " | length  }}
			</li>
			<li>
				{{ " dalton  " | trim | length  }}
			</li>
			<li>
				{{ " dalton  " | trim(side="left") | length  }}
			</li>
			<li>
				{% apply upper %}
				Bonjour
				{{ personne.prenom }}
				{% endapply %}
			</li>
		</ul>

		{# effectuer une déclaration de variable dans la vue twig #}
		<ul>
			{% set chaine = "bonjour" %}
			<li>
				{{ chaine }}
			</li>
			{% set chaine = "bonsoir" %}
			<li>
				{{ chaine }}
			</li>
			{# Opération sur les variables #}
			{% set x = 5 %}
			{% set y = 3 %}
			<li>
				{{ x + y }}
			</li>
			<li>
				{{ chaine starts with "h" }}
			</li>
			<li>
				{{ 8 in tableau }}
			</li>
			<li>
				{{ 80  not in tableau }}
			</li>
			<li>
				{{ tableau starts with 2 }}
			</li>
			<li>
				{{ chaine matches '/^b.{5}r$/'}}
			</li>
			<li>
				{% if 8 in tableau %}
					yes
				{% else %}
					no
				{% endif %}
			</li>
			<li>
				{% if tableau[0] < 0  %}
					{{ tableau[0] ~ ' est négatif' }}
				{% elseif tableau[0] > 0 %}
					{{ tableau[0] ~ ' est positif'}}
				{% elseif tableau[0] == 0 %}
					{{ tableau[0] ~ ' est null' }}
				{% endif %}
			</li>
			<li>
				{% if x is defined  %}
					{{ 'valeur de x : ' ~ x }}
					{{ x ~ " n'est pas défini"}}
				{% endif %}
			</li>
			<li>
				{% if tableau[0] is even  %}
					{{ tableau[0] ~ ' est pair' }}
				{% else %}
					{{ tableau[0] ~ ' est impair' }}
				{% endif %}
			</li>
			<li>
				{% if tableau[0] is divisible by (2)  %}
					{{ tableau[0] ~ ' est pair' }}
				{% else %}
					{{ tableau[0] ~ ' est impair' }}
				{% endif %}
			</li>
			<li>
				{% if tableau[0] is divisible by (3)  %}
					{{ tableau[0] ~ ' est divisible par 3' }}
				{% else %}
					{{ tableau[0] ~ " n'est pas divisible par 3" }}
				{% endif %}
			</li>
		</ul>
		{# Parcourir un tableau avec le for in #}
		<ul>
			<li>
				{% for elt in tableau %}
					<li>
						{{ elt }}
					</li>
				{% endfor %}
			</li>
		</ul>
		<ul>
			{% for elt in tableau %}
				{% if elt is even %}
					<li>{{elt ~ " est pair" }}</li>
				{% else %}
					<li>{{elt ~ " est impair" }}</li>
				{% endif %}
			{% endfor %}
		</ul>
		<ul>
			{% for elt in 'a'..'z' %}
				{{ elt }}
			{% endfor %}
		</ul>
		<ul>
			{% for elt in range('d', 'm') %}
				{{ elt }}
			{% endfor %}
		</ul>
		<ul>
			{% for elt in range('d', 'a') %}
				{{ elt }}
			{% endfor %}
		</ul>
		<ul>
			{% for key, value in tableau %}
				<li>{{ "clé: " ~ key ~ " - valeur: " ~ value }}</li>
			{% endfor %}
		</ul>
		<ul>
			{% for elt in tableau %}
				<li>{{ loop.index }}
					:
					{{ loop.index0 }}
					:
					{{ loop.first ? "premier" : "nom premier" }}
					:
					{{ loop.last ? "dernier" : "non dernier" }}
					=>
					{{ elt }}
				</li>
			{% endfor %}
		</ul>
		{# Dans la vue afficher tous les élements qui ne sont ni pair, ni à la première position, ni à la dernière position #}
		{% for elt in tableau %}
			{{ elt }}
		{% endfor %}
		<ul>
			{% for elt in tableau %}
				{% if elt is not even and elt != loop.first and elt != loop.last  %}
					<li>{{ elt }}</li>
				{% endif %}
			{% endfor %}
		</ul>
		{# avec les filters #}
		<p>avec le filter slice</p>
		<ul>
			{%  for elt in tableau | slice(2,2) %}
				<li>{{ elt }}
				</li>
			{% endfor %}
		</ul>
		<ul>
			{%  for elt in tableau[2:2] %}
				<li>{{ elt }}
				</li>
			{% endfor %}
		</ul>
		<ul>
			{%  for elt in tableau[:2] %}
				<li>{{ elt }}
				</li>
			{% endfor %}
		</ul>
		<ul>
			{%  for elt in tableau[2:] %}
				<li>{{ elt }}
				</li>
			{% endfor %}
		</ul>
		<p>Avec le filtre reduce :</p>
		<p>{{ tableau | reduce((resultat, valeur) => resultat + valeur, 100) }}</p>

		{# exo3 : la plus grande valeur du tableau #}
		<p>//////////// avec reduce ////////////
		</p>
		<p>{{ tableau | reduce((res, val) => res < val ? val : res ) }}</p>

		<p>//////////// avec map ////////////
		</p>
		<ul>
			{% for elt in tableau | map(elt => elt + 3)%}
				<li>{{ elt }}</li>
			{% endfor %}
		</ul>

		<p>////////////  avec filter (2,8,10,4)////////////
		</p>
		<ul>
			{% for elt in tableau | filter(elt => elt % 2 == 0)%}
				<li>{{ elt }}</li>
			{% endfor %}
		</ul>

		<p>//////////// Uniquement les pairs du tableau clubs (2/2/4) ////////////p>
			<ul>
				{% for elt in clubs | map(elt => elt | length) | filter(elt => elt is even) %}
					<li>{{ elt }}</li>
				{% endfor %}
			</ul>
		</p>
		<p>//////////// Nombres total de caratères dans le tableau club (14) ////////////p>
			{# V1 #}
		</p>
		<p>{{ clubs | reduce((resultat, valeur) => resultat ~ valeur) | length }}</p>
		{# V2 #}
		<p>{{ clubs | map(elt => elt | length) | reduce((res, val) => res + val) }}</p>
		{# V3 #}
		<p>{{ clubs | reduce((res, val) => res + val | length) }}</p>

		<p>//////////// Ne pas interpréter la balise ////////////
		</p>
		<p>
			{{ "bonjour <br> bonsoir" }}
		</p>
		<p>
			{{ "bonjour <br> bonsoir" | e}}
		</p>
		<p>//////////// Interpréter les balises ////////////
		</p>

		{# {% set str = "<script>alert('bonjour')</script>"%}
		{{ str | raw }} #}

	</div>
{% endblock %}
